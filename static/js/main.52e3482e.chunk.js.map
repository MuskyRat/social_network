{"version":3,"sources":["utils/object-handlers.tsx","api/users-api.ts","redux/users-reducer.ts","api/chat-api.ts","redux/chat-reducer.ts","components/Main/Login/Login.module.css","common/App-Preloader/App-Preloader.module.css","components/Main/Profile/Profile.module.css","common/Preloader/Preloader.module.css","hoc/withSuspense.module.css","components/Main/Profile/ProfileInfo/ProfileDataForm.module.css","components/Main/Login/LoginForm.module.css","components/Navbar/Navbar.tsx","components/Main/ERROR404/ERROR404.tsx","api/auth-api.ts","api/security-api.ts","redux/auth-reducer.ts","redux/app-reducer.ts","api/profile-api.ts","redux/profile-reducer.ts","redux/redux-store.ts","redux/auth-selectors.ts","components/Main/Login/LoginForm.tsx","components/Main/Login/Login.tsx","redux/app-selectors.ts","common/App-Preloader/App-Preloader.tsx","redux/profile-selectors.ts","components/Main/Profile/ProfileInfo/ProfileDataForm.tsx","components/Main/Profile/ProfileInfo/ProfileStatus.tsx","components/Main/Profile/ProfileInfo/ProfileInfo.tsx","components/Main/Profile/MyPosts/MyPostsForm.tsx","components/Main/Profile/MyPosts/Post.tsx","components/Main/Profile/MyPosts/MyPosts.tsx","components/Main/Profile/Profile.tsx","assets/logo.png","components/Header/Header.tsx","hoc/withSuspense.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Navbar/Navbar.module.css","api/api.ts","App.module.css","components/Main/Profile/MyPosts/Post.module.css","components/Header/Header.module.css","assets/userPhoto.png","assets/preloader.svg","components/Main/Profile/ProfileInfo/ProfileStatus.module.css","components/Main/Profile/MyPosts/MyPosts.module.css","components/Main/Profile/MyPosts/MyPostsForm.module.css","components/Main/Profile/ProfileInfo/ProfileInfo.module.css","common/Preloader/Preloader.tsx","redux/dialogs-reducer.ts"],"names":["updateObjectInArray","items","itemId","objPropName","newObjProps","map","i","usersAPI","getUsers","count","page","term","friend","instance","get","params","then","res","data","getUser","userId","follow","post","unfollow","delete","initialState","users","totalUsersCount","currentPage","pageSize","isFetching","followingInProgress","filter","actions","type","payload","requestUsers","dispatch","a","totalCount","_followUnfollowFlow","APIMethod","actionCreator","resultCode","ResultCodeEnum","Success","bind","usersReducer","state","action","followed","subscribers","ws","notifySubscribersAboutStatus","status","forEach","s","openHandler","console","log","closeHandler","setTimeout","createChannel","errorHandler","messageHandler","e","JSON","parse","cleanUp","removeEventListener","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","newMessage","send","messages","newMessages","_newMessageHandler","newMessageHandlerCreator","_statusChangedHandler","statusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessage","message","chatReducer","m","id","v1","index","array","length","module","exports","Navbar","className","style","wrapper","item","to","activeClassName","active","ERROR404","authAPI","email","password","rememberMe","captcha","securityAPI","login","isAuth","captchaUrl","errorMessage","getAuthUserData","userData","getState","auth","ResultCodeForCaptchaEnum","CaptchaIsRequired","getCaptchaUrl","Error","url","authReducer","initialized","appReducer","profileAPI","put","profile","photoFile","formData","FormData","append","headers","posts","likesCount","addPost","newPostText","deletePost","postId","setProfile","setStatus","setPhoto","photos","getProfile","profileReducer","newPost","p","rootReducer","combineReducers","app","chat","dialogs","dialogsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","selectUserId","selectLogin","selectIsAuth","selectCaptchaUrl","selectErrorMessage","LoginForm","useDispatch","container","header","validationSchema","Yup","initialValues","onSubmit","values","setSubmitting","promise","Promise","all","isSubmitting","htmlFor","name","required","component","errorMessage_1","errorMessage_2","checkbox","span","img","src","alt","button","disabled","connect","selectInitialized","AppPreloader","preloader","selectPosts","selectProfile","selectStatus","ProfileDataForm","deactivateEditMode","updateProfile","enableReinitialize","fullName","lineContainer","line","checkboxLabel","checkboxSpan","title","content","as","cols","rows","Object","keys","contacts","c","contact","titleSpan","lineContainer2","line2","ProfileStatus","updateStatus","isOwner","useState","editMode","setEditMode","localStatus","setLocalStatus","useEffect","input","value","onChange","target","onBlur","autoFocus","maxLength","onDoubleClick","ProfileInfo","updatePhoto","large","userPhoto","fileInput","files","file","info","activateEditMode","ProfileData","wrapper2","lookingForAJob","lookingForAJobDescription","aboutMe","onClick","Contact","valueSpan","MyPostsForm","resetForm","textarea","placeholder","Post","body","text","likes","MyPosts","h3","reverse","Profile","Number","this","props","match","authorizedUserId","history","getStatus","error","refreshProfile","prevProps","Preloader","React","Component","reject","withRouter","Header","useSelector","location","useLocation","useHistory","onLogout","logo","loginInfo","logout","pathname","withSuspense","WrappedComponent","fallback","LazyDialogs","lazy","LazyUsers","LazyChat","SuspendedLazyDialogs","SuspendedLazyUsers","SuspendedLazyChat","App","catchAllUnhandledErrors","alert","initializeApp","nav","main","exact","from","path","render","AppContainer","AppContainer2","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","axios","create","baseURL","withCredentials","userName","dir","addMessage","newMessageBody"],"mappings":"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","file":"static/js/main.52e3482e.chunk.js","sourcesContent":["\r\n\r\nexport const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((i: any) => {\r\n        if(i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps};\r\n        } else {\r\n            return i;\r\n        }\r\n    })\r\n};","import {APIResponseType, GetUsersResponseType, instance} from \"./api\";\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers (count = 10, page = 1, term = '', friend: boolean | null = null) {\r\n        return instance.get<GetUsersResponseType>('users', {params: {count, page, term, ...(friend === null ? '' : {friend: friend})}}).then(res => res.data);\r\n    },\r\n    getUser (userId: number) {\r\n        return instance.get<boolean>(`follow/${userId}`).then(res => res.data);\r\n    },\r\n    follow (userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data);\r\n    },\r\n    unfollow (userId: number) {\r\n        return instance.delete<APIResponseType>(`follow/${userId}`).then(res => res.data);\r\n    }\r\n};","import {UserType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {updateObjectInArray} from \"../utils/object-handlers\";\r\nimport {usersAPI} from \"../api/users-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {APIResponseType, ResultCodeEnum} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    pageSize: 15,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>,\r\n    filter: {\r\n        term: '',\r\n        friend: null as null | boolean\r\n    }\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})};\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {...state, users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})};\r\n        case 'SN/USERS/SET_USERS':\r\n            return {...state, users: action.users};\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT':\r\n            return {...state, totalUsersCount: action.totalUsersCount};\r\n        case 'SN/USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage};\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching};\r\n        case 'SN/USERS/TOGGLE_FOLLOWING_IN_PROGRESS':\r\n            return {...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((userId) => userId !== action.userId)};\r\n        case 'SN/USERS/SET_FILTER':\r\n            return {...state, filter: action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    follow: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n    unfollow: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n    setUsers: (users: UserType[]) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({type: 'SN/USERS/SET_TOTAL_USERS_COUNT', totalUsersCount} as const),\r\n    setCurrentPage: (currentPage: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', currentPage} as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching} as const),\r\n    toggleFollowingInProgress: (isFetching: boolean, userId: number) => ({type: 'SN/USERS/TOGGLE_FOLLOWING_IN_PROGRESS', isFetching, userId} as const),\r\n    setFilter: (filter: FilterType) => ({type: 'SN/USERS/SET_FILTER', payload: filter} as const)\r\n};\r\n\r\nexport const requestUsers = (count: number, page: number, filter: FilterType): ThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true));\r\n    dispatch(actions.setCurrentPage(page));\r\n    dispatch(actions.setFilter(filter));\r\n\r\n    const data = await usersAPI.getUsers(count, page, filter.term, filter.friend);\r\n    dispatch(actions.setUsers(data.items));\r\n    dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    dispatch(actions.toggleIsFetching(false));\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>, userId: number, APIMethod: (userId: number) => Promise<APIResponseType>, actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingInProgress(true, userId));\r\n    const data = await APIMethod(userId);\r\n    if(data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingInProgress(false, userId));\r\n};\r\n\r\nexport const follow = (userId: number): ThunkType => async (dispatch) => {\r\n    await _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.follow);\r\n};\r\n\r\nexport const unfollow = (userId: number): ThunkType => async (dispatch) => {\r\n    await _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollow);\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nexport type FilterType = typeof initialState.filter;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>;\r\n\r\nexport default usersReducer;","\r\nlet subscribers = {\r\n    'messages-received': [] as MessagesReceivedSubscriberType[],\r\n    'status-changed': [] as StatusChangedSubscriberType[]\r\n}\r\n\r\nlet ws: WebSocket | null = null;\r\n\r\nconst notifySubscribersAboutStatus = (status: StatusType) => {\r\n    subscribers[\"status-changed\"].forEach((s) => s(status));\r\n};\r\n\r\nconst openHandler = () => {\r\n    console.log('openHandler');\r\n    notifySubscribersAboutStatus('ready');\r\n};\r\n\r\nconst closeHandler = () => {\r\n    notifySubscribersAboutStatus('pending')\r\n    console.log('closeHandler')\r\n    setTimeout(createChannel, 3000);\r\n};\r\n\r\nconst errorHandler = () => {\r\n    notifySubscribersAboutStatus('error');\r\n    console.log('Refresh the page.');\r\n};\r\n\r\nconst messageHandler = (e: MessageEvent) => {\r\n    subscribers[\"messages-received\"].forEach((s) => s(JSON.parse(e.data)));\r\n};\r\n\r\nconst cleanUp = () => {\r\n    ws?.removeEventListener('open', openHandler);\r\n    ws?.removeEventListener('close', closeHandler);\r\n    ws?.removeEventListener('error', errorHandler);\r\n    ws?.removeEventListener('message', messageHandler);\r\n};\r\n\r\nconst createChannel = () => {\r\n    console.log('createChannel')\r\n    cleanUp();\r\n    ws?.close();\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n    notifySubscribersAboutStatus('pending');\r\n    ws.addEventListener('open', openHandler);\r\n    ws.addEventListener('close', closeHandler);\r\n    ws.addEventListener('error', errorHandler);\r\n    ws.addEventListener('message', messageHandler);\r\n    // debugger;\r\n};\r\n\r\nexport const chatAPI = {\r\n    start () {\r\n        createChannel();\r\n    },\r\n    stop () {\r\n        subscribers[\"messages-received\"] = [];\r\n        subscribers[\"status-changed\"] = [];\r\n        cleanUp();\r\n        ws?.close();\r\n    },\r\n    subscribe (eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n\r\n        // @ts-ignore\r\n        subscribers[eventName].push(callback);\r\n        return () => {\r\n            // @ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter((s) => s !== callback)\r\n        }\r\n    },\r\n    unsubscribe (eventName: EventsNamesType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\r\n        // @ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter((s) => s !== callback)\r\n    },\r\n    sendMessage (newMessage: string) {\r\n        ws?.send(newMessage);\r\n    }\r\n}\r\n\r\ntype MessagesReceivedSubscriberType = (messages: ChatMessageAPIType[]) => void;\r\n\r\ntype StatusChangedSubscriberType = (status: StatusType) => void;\r\n\r\nexport type ChatMessageAPIType = {\r\n    message: string,\r\n    photo: string | null,\r\n    userId: number,\r\n    userName: string\r\n};\r\n\r\nexport type StatusType = 'pending' | 'ready' | 'error';\r\n\r\ntype EventsNamesType = 'messages-received' | 'status-changed';","import {chatAPI, ChatMessageAPIType, StatusType} from \"../api/chat-api\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {v1} from 'uuid';\r\nimport {Dispatch} from \"redux\";\r\n\r\nlet initialState = {\r\n    messages: null as null | ChatMessageType[],\r\n    status: 'pending' as StatusType\r\n}\r\n\r\nconst chatReducer = (state = initialState, action: ActionsTypes): InitialStateType  => {\r\n    switch(action.type) {\r\n        case 'SN/CHAT/SET_MESSAGES':\r\n            return {...state, messages: state.messages !== null\r\n                    ? [...state.messages, ...action.newMessages.map((m) => ({...m, id: v1()}))].filter((m, index, array) => index >= (array.length - 20))\r\n                    : [...action.newMessages.map((m) => ({...m, id: v1()}))].filter((m, index, array) => index >= (array.length - 20))};\r\n        case 'SN/CHAT/SET_STATUS':\r\n            return {...state, status: action.status};\r\n        case 'SN/CHAT/DELETE_MESSAGES':\r\n            return {...state, messages: null as null | ChatMessageType[]}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    setMessages: (newMessages: ChatMessageAPIType[]) => ({type: 'SN/CHAT/SET_MESSAGES', newMessages} as const),\r\n    deleteMessages: () => ({type: 'SN/CHAT/DELETE_MESSAGES'} as const),\r\n    setStatus: (status: StatusType) => ({type: 'SN/CHAT/SET_STATUS', status} as const)\r\n};\r\n\r\nlet _newMessageHandler: ((messages: ChatMessageAPIType[]) => void) | null = null;\r\n\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if(_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(actions.setMessages(messages));\r\n        };\r\n    }\r\n    return _newMessageHandler;\r\n};\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null;\r\n\r\nconst statusChangedHandlerCreator = (dispatch: Dispatch<any>) => {\r\n    if(_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(actions.setStatus(status));\r\n        };\r\n    }\r\n    return _statusChangedHandler;\r\n};\r\n\r\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.start();\r\n    chatAPI.subscribe('messages-received', newMessageHandlerCreator(dispatch));\r\n    chatAPI.subscribe('status-changed', statusChangedHandlerCreator(dispatch));\r\n}\r\n\r\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatAPI.unsubscribe('messages-received', newMessageHandlerCreator(dispatch));\r\n    chatAPI.unsubscribe('status-changed', statusChangedHandlerCreator(dispatch));\r\n    chatAPI.stop();\r\n    dispatch(actions.deleteMessages());\r\n}\r\n\r\nexport const sendMessage = (message: string): ThunkType => async (dispatch) => {\r\n    chatAPI.sendMessage(message);\r\n}\r\n\r\nexport default chatReducer;\r\n\r\nexport type ChatMessageType = ChatMessageAPIType & {id: string};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__1NeN7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App-Preloader_wrapper__3BVmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Profile_wrapper__CJ5js\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Preloader_wrapper__179TU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"withSuspense_wrapper__1MsQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileDataForm_wrapper__3wlYK\",\"fullName\":\"ProfileDataForm_fullName__3zl4x\",\"lineContainer\":\"ProfileDataForm_lineContainer__1bKGm\",\"lineContainer2\":\"ProfileDataForm_lineContainer2__3ZIsW\",\"line\":\"ProfileDataForm_line__fZegz\",\"line2\":\"ProfileDataForm_line2__3kOHn\",\"item\":\"ProfileDataForm_item__3LydA\",\"content\":\"ProfileDataForm_content__1HGcn\",\"checkbox\":\"ProfileDataForm_checkbox__3Xvzg\",\"checkboxSpan\":\"ProfileDataForm_checkboxSpan__19sw2\",\"contact\":\"ProfileDataForm_contact__1eleb\",\"titleSpan\":\"ProfileDataForm_titleSpan__3OWPO\",\"button\":\"ProfileDataForm_button__2K2PC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginForm_wrapper__2FEib\",\"container\":\"LoginForm_container__3U3H_\",\"header\":\"LoginForm_header__2uAly\",\"item\":\"LoginForm_item__3WEho\",\"errorMessage_1\":\"LoginForm_errorMessage_1__3IV9U\",\"errorMessage_2\":\"LoginForm_errorMessage_2__3GmxV\",\"rememberMe\":\"LoginForm_rememberMe__2obJS\",\"span\":\"LoginForm_span__2k4Xx\",\"checkbox\":\"LoginForm_checkbox__KLrjm\",\"captchaUrl\":\"LoginForm_captchaUrl__3rjrr\",\"img\":\"LoginForm_img__O_9Y_\",\"button\":\"LoginForm_button__1cmlR\"};","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar: React.FC = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.item}>\r\n                <NavLink to={'/profile'} activeClassName={style.active} >Profile</NavLink>\r\n            </div>\r\n            {/*<div className={style.item}>*/}\r\n            {/*    <NavLink to={'/dialogs'} activeClassName={style.active}>Dialogs</NavLink>*/}\r\n            {/*</div>*/}\r\n            <div className={style.item}>\r\n                <NavLink to={'/users'} activeClassName={style.active} >Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={'/chat'} activeClassName={style.active} >Chat</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default Navbar","import React from \"react\";\r\nimport style from './ERROR404.module.css';\r\n\r\n\r\nconst ERROR404: React.FC = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            PAGE NOT FOUND: ERROR 404\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ERROR404;","import {APIResponseType, instance, ResultCodeEnum, ResultCodeForCaptchaEnum} from \"./api\";\r\n\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\ntype MeResponseDataType = {\r\n    id: number,\r\n    email: string,\r\n    login: string\r\n}\r\n\r\nexport const authAPI = {\r\n    login (email: string, password: string, rememberMe: boolean, captcha: string | null = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodeEnum | ResultCodeForCaptchaEnum>>('auth/login', {email, password, rememberMe, captcha}).then(res => res.data);\r\n    },\r\n    logout () {\r\n        return instance.delete<APIResponseType>('auth/login').then(res => res.data);\r\n    },\r\n    me () {\r\n        return instance.get<APIResponseType<MeResponseDataType>>('auth/me').then(res => res.data);\r\n    }\r\n}","import {instance} from \"./api\";\r\n\r\ntype GetCaptchaUrlResponseDataType = {\r\n    url: string\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n        return instance.get<GetCaptchaUrlResponseDataType>('security/get-captcha-url').then(res => res.data);\r\n    }\r\n}","import {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {authAPI} from \"../api/auth-api\";\r\nimport {ResultCodeEnum, ResultCodeForCaptchaEnum} from \"../api/api\";\r\nimport {securityAPI} from \"../api/security-api\";\r\n\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null,\r\n    errorMessage: null as string | null\r\n};\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/AUTH/SET_AUTH_USER_DATA':\r\n            return {...state, ...action.payload };\r\n        case 'SN/AUTH/SET_CAPTCHA_URL':\r\n            return {...state, captchaUrl: action.captchaUrl};\r\n        case 'SN/AUTH/SET_ERROR_MESSAGE':\r\n            return {...state, errorMessage: action.errorMessage};\r\n        case 'SN/AUTH/DELETE_CAPTCHA_URL':\r\n            return {...state, captchaUrl: null}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    setAuthUserData: (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({type: 'SN/AUTH/SET_AUTH_USER_DATA', payload: {id, email, login, isAuth}} as const),\r\n    setCaptchaUrl: (captchaUrl: string) => ({type: 'SN/AUTH/SET_CAPTCHA_URL', captchaUrl} as const),\r\n    setErrorMessage: (errorMessage: string | null) => ({type: 'SN/AUTH/SET_ERROR_MESSAGE', errorMessage} as const),\r\n    deleteCaptchaUrl: () => ({type: 'SN/AUTH/DELETE_CAPTCHA_URL'} as const)\r\n};\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    const data = await authAPI.me();\r\n    const userData = data.data\r\n    if(data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actions.setAuthUserData(userData.id, userData.email, userData.login, true))\r\n    }\r\n};\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch, getState) => {\r\n    const errorMessage = getState().auth.errorMessage;\r\n    const captchaUrl = getState().auth.captchaUrl;\r\n    errorMessage && dispatch(actions.setErrorMessage(null));\r\n    const data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if(data.resultCode === ResultCodeEnum.Success) {\r\n        await dispatch(getAuthUserData());\r\n        captchaUrl && dispatch(actions.deleteCaptchaUrl());\r\n    } else if(data.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n        await dispatch(getCaptchaUrl());\r\n        dispatch(actions.setErrorMessage('Incorrect e-mail or password. Captcha is required.'))\r\n    }  else if(data.resultCode === ResultCodeEnum.Error) {\r\n        dispatch(actions.setErrorMessage('Incorrect e-mail or password.'));\r\n    }\r\n};\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n    dispatch(actions.setCaptchaUrl(data.url));\r\n};\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    const data = await authAPI.logout();\r\n    if(data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>;\r\n\r\nexport default authReducer;","import {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/APP/INITIALIZE_APP':\r\n            return {...state, ...action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    initializeApp: () => ({type: 'SN/APP/INITIALIZE_APP', payload: {initialized: true}} as const)\r\n}\r\n\r\nexport const initializeApp = (): ThunkType => async (dispatch) => {\r\n    const promise = await dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => dispatch(actions.initializeApp()));\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>;","import {APIResponseType, instance} from \"./api\";\r\nimport {PhotosType, ProfileType} from \"../types/types\";\r\n\r\ntype UpdatePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getStatus (userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`).then(res => res.data);\r\n    },\r\n    // status max length is 300 symbols\r\n    updateStatus (status: string) {\r\n        return instance.put<APIResponseType>('profile/status', {status}).then(res => res.data);\r\n    },\r\n    getProfile (userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`).then(res => res.data);\r\n    },\r\n    updateProfile (profile: ProfileType) {\r\n        return instance.put<APIResponseType>('profile', profile).then(res => res.data);\r\n    },\r\n    updatePhoto (photoFile: File) {\r\n        let formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put<APIResponseType<UpdatePhotoResponseDataType>>('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data)\r\n    }\r\n}","import {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\nimport {profileAPI} from \"../api/profile-api\";\r\nimport {ResultCodeEnum} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Where is my money, nigga?!', likesCount: 2},\r\n        {id: 2, message: 'Trololo!', likesCount: 10},\r\n        {id: 3, message: 'Just wanna say Hi=)', likesCount: 1}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'SN/PROFILE/ADD_POST':\r\n            const newPost: PostType = {id: state.posts.length + 1, message: action.newPostText, likesCount: 0};\r\n            return {...state, posts: [...state.posts, newPost]};\r\n        case 'SN/PROFILE/DELETE_POST':\r\n            return {...state, posts: state.posts.filter((p) => p.id !== action.postId)};\r\n        case 'SN/PROFILE/SET_PROFILE':\r\n            return {...state, profile: action.payload};\r\n        case 'SN/PROFILE/SET_STATUS':\r\n            return {...state, status: action.status};\r\n        case 'SN/PROFILE/SET_PHOTO':\r\n            return {...state, profile: {...state.profile, photos: action.payload} as ProfileType};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({type: 'SN/PROFILE/ADD_POST', newPostText} as const),\r\n    deletePost: (postId: number) => ({type: 'SN/PROFILE/DELETE_POST', postId} as const),\r\n    setProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET_PROFILE', payload: profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET_STATUS', status} as const),\r\n    setPhoto: (photos: PhotosType) => ({type: 'SN/PROFILE/SET_PHOTO', payload: photos} as const)\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getStatus(userId);\r\n    dispatch(actions.setStatus(data));\r\n};\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n    if(data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actions.setStatus(status));\r\n    }\r\n};\r\n\r\nexport const getProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId);\r\n    dispatch(actions.setProfile(data));\r\n};\r\n\r\nexport const updateProfile = (profile: ProfileType): ThunkType => async  (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const data = await profileAPI.updateProfile(profile);\r\n    if(data.resultCode === ResultCodeEnum.Success) {\r\n        if(userId) {\r\n            await dispatch(getProfile(userId));\r\n        } else {\r\n            throw new Error(\"UserId can't be null.\")\r\n        }\r\n    } else {\r\n        await Promise.reject(data.messages[0]);\r\n    }\r\n};\r\n\r\nexport const updatePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.updatePhoto(file);\r\n    if(data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actions.setPhoto(data.data.photos));\r\n    }\r\n};\r\n\r\nexport default profileReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>;","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport chatReducer from \"./chat-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n    users: usersReducer,\r\n    chat: chatReducer,\r\n    dialogs: dialogsReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer;\r\n\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U} ? U : never;\r\n\r\nexport type BaseThunkType<A extends Action = Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;","import {AppStateType} from \"./redux-store\";\r\n\r\n\r\nexport const selectUserId = (state: AppStateType) => {\r\n    return state.auth.id;\r\n}\r\n\r\nexport const selectLogin = (state: AppStateType) => {\r\n    return state.auth.login;\r\n}\r\n\r\nexport const selectEmail = (state: AppStateType) => {\r\n    return state.auth.email;\r\n}\r\n\r\nexport const selectIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport const selectCaptchaUrl = (state: AppStateType) => {\r\n    return state.auth.captchaUrl;\r\n}\r\n\r\nexport const selectErrorMessage = (state: AppStateType) => {\r\n    return state.auth.errorMessage;\r\n}","import React from \"react\";\r\nimport style from './LoginForm.module.css';\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {login} from \"../../../redux/auth-reducer\";\r\n\r\ntype PropsType = {\r\n    isAuth: boolean\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void,\r\n    captchaUrl: string | null,\r\n    errorMessage: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<PropsType> = ({isAuth, captchaUrl, errorMessage}) => {\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.container}>\r\n                <div className={style.header}>\r\n                    <h1>Login</h1>\r\n                </div>\r\n\r\n                <Formik\r\n                    validationSchema={Yup.object({\r\n                        email: Yup.string().email('Enter a valid email address.')\r\n                    })}\r\n                    initialValues={{email: '', password: '', rememberMe: false, captchaUrl: ''}}\r\n                    onSubmit={(values, {setSubmitting}) => {\r\n                        const promise = dispatch(login(values.email, values.password, values.rememberMe, values.captchaUrl));\r\n                        Promise.all([promise]).then(() => {setSubmitting(false)});\r\n                    }}\r\n\r\n                >\r\n                    {({isSubmitting}) => (\r\n\r\n                        <Form>\r\n\r\n                            <div className={style.item}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <Field name='email' type='email' required />\r\n                                <ErrorMessage name='email' component='span' className={style.errorMessage_1} />\r\n                                {errorMessage && <span className={style.errorMessage_2}>{errorMessage}</span>}\r\n                            </div>\r\n                            <div className={style.item}>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <Field name='password' type='password' required />\r\n                            </div>\r\n                            <div className={style.rememberMe}>\r\n                                <label>\r\n                                    <Field className={style.checkbox} name='rememberMe' type='checkbox' />\r\n                                    <span className={style.span}></span>\r\n                                    rememberMe\r\n                                </label>\r\n                            </div>\r\n                            {captchaUrl &&\r\n                            <div className={style.captchaUrl}>\r\n                                <div className={style.img}>\r\n                                    <img src={captchaUrl} alt=\"\"/>\r\n                                </div>\r\n                                <div className={style.item}>\r\n                                    <label htmlFor=\"captchaUrl\">Captcha</label>\r\n                                    <Field name='captchaUrl' type='text' required />\r\n                                </div>\r\n                            </div>\r\n                            }\r\n                            <div className={style.button}>\r\n                                <button disabled={isSubmitting} type='submit'>Login</button>\r\n                            </div>\r\n\r\n\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport style from './Login.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {selectCaptchaUrl, selectErrorMessage, selectIsAuth} from \"../../../redux/auth-selectors\";\r\nimport { login } from \"../../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\n\r\nconst Login: React.FC<PropsType> = ({login, captchaUrl, isAuth, errorMessage}) => {\r\n\r\n    if(isAuth) {return <Redirect to='/profile' />}\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <LoginForm isAuth={isAuth} login={login} captchaUrl={captchaUrl} errorMessage={errorMessage} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    captchaUrl: selectCaptchaUrl(state),\r\n    isAuth: selectIsAuth(state),\r\n    errorMessage: selectErrorMessage(state)\r\n})\r\n\r\nexport default connect<StatePropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {login})(Login);\r\n\r\ntype StatePropsType = ReturnType<typeof mapStateToProps>;\r\n\r\ntype DispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\ntype PropsType = StatePropsType & DispatchPropsType","import {AppStateType} from \"./redux-store\";\r\n\r\n\r\nexport const selectInitialized = (state: AppStateType) => {\r\n    return state.app.initialized;\r\n}","import React from \"react\";\r\nimport style from './App-Preloader.module.css';\r\nimport preloader from '../../assets/preloader.svg';\r\n\r\nconst AppPreloader: React.FC = () => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default AppPreloader;","import {AppStateType} from \"./redux-store\";\r\n\r\n\r\nexport const selectPosts = (state: AppStateType) => {\r\n    return state.profile.posts;\r\n};\r\n\r\nexport const selectProfile = (state: AppStateType) => {\r\n    return state.profile.profile;\r\n};\r\n\r\nexport const selectStatus = (state: AppStateType) => {\r\n    return state.profile.status;\r\n};","import React from \"react\";\r\nimport style from './ProfileDataForm.module.css';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType,\r\n    deactivateEditMode: () => void,\r\n    updateProfile: (profile: ProfileType) => void\r\n}\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({profile, deactivateEditMode, updateProfile}) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={profile}\r\n                onSubmit={(values, {setSubmitting}) => {\r\n                    updateProfile(values);\r\n                    deactivateEditMode();\r\n                }}\r\n            >\r\n                {({isSubmitting}) => (\r\n\r\n                    <Form>\r\n\r\n                        <div className={style.fullName}>\r\n                            <Field name='fullName' type='text' />\r\n                        </div>\r\n                        <div className={style.lineContainer}>\r\n                            <div className={style.line}></div>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <b>Looking for a job</b>:\r\n                            <label className={style.checkboxLabel}>\r\n                                <Field className={style.checkbox} name='lookingForAJob' type='checkbox' />\r\n                                <span className={style.checkboxSpan}></span>\r\n                            </label>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <div className={style.title}>\r\n                                <b>My professional skills</b>:\r\n                            </div>\r\n                            <div className={style.content}>\r\n                                <Field name='lookingForAJobDescription' as='textarea' cols={100} rows={3} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <div className={style.title}>\r\n                                <b>About me</b>:\r\n                            </div>\r\n                            <div className={style.content}>\r\n                                <Field name='aboutMe' as='textarea' cols={100} rows={3} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={style.item}>\r\n                            <b>Contacts</b>: {Object.keys(profile.contacts).map((c) => <div key={c} className={style.contact}><span className={style.titleSpan}><b>{c}</b>: </span><Field name={'contacts.' + c} type='text' /></div>)}\r\n                        </div>\r\n                        <div className={style.button}>\r\n                            <button type='submit' disabled={isSubmitting} >Save profile</button>\r\n                        </div>\r\n                        <div className={style.lineContainer2}>\r\n                            <div className={style.line2}></div>\r\n                        </div>\r\n\r\n                    </Form>\r\n\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileDataForm;","import React, {useEffect, useState} from \"react\";\r\nimport style from './ProfileStatus.module.css'\r\n\r\ntype PropsType = {\r\n    status: string,\r\n    updateStatus: (status: string) => void,\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = ({status, updateStatus, isOwner}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const [localStatus, setLocalStatus] = useState(status);\r\n\r\n    useEffect(() => {\r\n        setLocalStatus(status);\r\n    }, [status]);\r\n\r\n    const onNewMessageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLocalStatus(e.target.value);\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        isOwner && setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        updateStatus(localStatus);\r\n        setEditMode(false);\r\n    };\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            {editMode\r\n                ? <div className={style.input}><input type=\"text\" value={localStatus} onChange={onNewMessageChange} onBlur={deactivateEditMode} autoFocus={true} maxLength={300}/></div>\r\n                : <div className={style.span}><span title={'Double click to change status'} onDoubleClick={activateEditMode}>{status || \"this user hasn't uploaded any status yet\"}</span></div>}\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileStatus;","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from './ProfileInfo.module.css';\r\nimport {ContactsType, ProfileType} from \"../../../../types/types\";\r\nimport userPhoto from '../../../../assets/userPhoto.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType,\r\n    status: string,\r\n    isOwner: boolean,\r\n    updateProfile: (profile: ProfileType) => void,\r\n    updateStatus: (status: string) => void,\r\n    updatePhoto: (file: File) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({status, profile, isOwner, updateStatus, updateProfile, updatePhoto}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(e.target.files && e.target.files.length) {\r\n            updatePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.container}>\r\n                <div className={style.img}>\r\n                    <img src={profile && profile.photos.large ? profile.photos.large : userPhoto} alt=\"\"/>\r\n                </div>\r\n                <div className={style.fileInput}>\r\n                    {isOwner && <label><input type=\"file\" onChange={onMainPhotoSelected} className={style.file} /><span className={style.span}>Edit photo</span></label>}\r\n                </div>\r\n                <ProfileStatus status={status} isOwner={isOwner} updateStatus={updateStatus} />\r\n                <div className={style.info}>\r\n                    {editMode\r\n                        ? <ProfileDataForm profile={profile} deactivateEditMode={deactivateEditMode} updateProfile={updateProfile} />\r\n                        : <ProfileData isOwner={isOwner} activateEditMode={activateEditMode} profile={profile} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default ProfileInfo;\r\n\r\ntype ProfileDataPropsType = {\r\n    isOwner: boolean,\r\n    activateEditMode: () => void,\r\n    profile: ProfileType\r\n}\r\n\r\nconst ProfileData: React.FC<ProfileDataPropsType> = ({isOwner, activateEditMode, profile}) => {\r\n\r\n    return (\r\n        <div className={style.wrapper2}>\r\n            <div className={style.fullName}>\r\n                <b>{profile.fullName}</b>\r\n            </div>\r\n            <div className={style.lineContainer}>\r\n                <div className={style.line}></div>\r\n            </div>\r\n            <div className={style.item}>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n                <div className={style.item}>\r\n                    <div className={style.title}>\r\n                        <b>My professional skills</b>:\r\n                    </div>\r\n                    <div className={style.content}>\r\n                        {profile.lookingForAJobDescription}\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className={style.item}>\r\n                <div className={style.title}>\r\n                    <b>About me</b>:\r\n                </div>\r\n                <div className={style.content}>\r\n                    {profile.aboutMe}\r\n                </div>\r\n            </div>\r\n            <div className={style.item}>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map((c) => <Contact key={c} title={c} value={profile.contacts[c as keyof ContactsType]} />)}\r\n            </div>\r\n            {isOwner && <div className={style.button}><button onClick={activateEditMode} >Edit profile</button></div>}\r\n            <div className={style.lineContainer2}>\r\n                <div className={style.line2}></div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\ntype ContactPropsType = {\r\n    title: string,\r\n    value: string | null\r\n}\r\n\r\nconst Contact: React.FC<ContactPropsType> = ({value, title}) => {\r\n\r\n    return (\r\n        <div className={style.contact}><span className={style.titleSpan}><b>{title}</b>: </span><span className={style.valueSpan}>{value}</span></div>\r\n    )\r\n\r\n};","import React from 'react';\r\nimport style from './MyPostsForm.module.css';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\ntype PropsType = {\r\n    addPost: (newPostText: string) => void,\r\n}\r\n\r\nconst MyPostsForm: React.FC<PropsType> = ({addPost}) => {\r\n\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <Formik\r\n                initialValues={{newPostText: ''}}\r\n                validationSchema={Yup.object({\r\n                    newPostText: Yup.string().required('Required')\r\n                })}\r\n                onSubmit={(values, {setSubmitting, resetForm}) => {\r\n                    addPost(values.newPostText);\r\n                    resetForm();\r\n                    setSubmitting(false);\r\n                }}\r\n            >\r\n                {({isSubmitting}) => (\r\n\r\n                    <Form>\r\n\r\n                        <div className={style.textarea}><Field as='textarea' name='newPostText' placeholder='Enter your message...' /></div>\r\n\r\n                        <div className={style.button}><button disabled={isSubmitting} type='submit' >Post</button></div>\r\n\r\n                    </Form>\r\n\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default MyPostsForm;","import React from \"react\";\r\nimport style from './Post.module.css';\r\nimport {PostType} from \"../../../../types/types\";\r\nimport userPhoto from '../../../../assets/userPhoto.png';\r\n\r\ntype PropsType = {\r\n    post: PostType,\r\n    deletePost: (postId: number) => void\r\n}\r\n\r\nconst Post: React.FC<PropsType> = ({post, deletePost}) => {\r\n\r\n\r\n    const onPostDelete = () => {\r\n        deletePost(post.id);\r\n    };\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.img}>\r\n                <img src={userPhoto} alt=\"\"/>\r\n            </div>\r\n            <div className={style.body}>\r\n                <div className={style.text}>\r\n                    <span>{post.message}</span>\r\n                </div>\r\n                <div className={style.likes}>\r\n                    <span>likesCount: {post.likesCount}</span><button onClick={onPostDelete} >Delete</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport style from './MyPosts.module.css';\r\nimport {PostType} from \"../../../../types/types\";\r\nimport MyPostsForm from \"./MyPostsForm\";\r\nimport Post from \"./Post\";\r\n\r\ntype PropsType = {\r\n    posts: PostType[],\r\n    addPost: (newPostText: string) => void,\r\n    deletePost: (postId: number) => void\r\n}\r\n\r\nconst MyPosts: React.FC<PropsType> = ({posts, addPost, deletePost}) => {\r\n\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.h3}><h2>My posts</h2></div>\r\n            <MyPostsForm addPost={addPost} />\r\n            <div className={style.posts}>\r\n                {posts.map((p) => <Post key={p.id} post={p} deletePost={deletePost} />).reverse()}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport style from './Profile.module.css';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {selectPosts, selectProfile, selectStatus} from \"../../../redux/profile-selectors\";\r\nimport {selectUserId} from \"../../../redux/auth-selectors\";\r\nimport {ProfileType} from \"../../../types/types\";\r\nimport {actions, getProfile, getStatus, updatePhoto, updateProfile, updateStatus} from \"../../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nclass Profile extends React.Component<PropsType> {\r\n\r\n    refreshProfile () {\r\n        let userId: number = Number(this.props.match.params.userId);\r\n        if(!userId) {\r\n            if(this.props.authorizedUserId) {\r\n                userId = this.props.authorizedUserId;\r\n            }\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        if(!userId) {\r\n            console.error('UserId must exist in URI params or in authorizedUserId')\r\n        } else {\r\n            this.props.getStatus(userId);\r\n            this.props.getProfile(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>) {\r\n        if(prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        if(!this.props.profile) return <Preloader />\r\n\r\n        return (\r\n            <div className={style.wrapper}>\r\n                <ProfileInfo profile={this.props.profile}\r\n                             status={this.props.status}\r\n                             updateStatus={this.props.updateStatus}\r\n                             updateProfile={this.props.updateProfile}\r\n                             updatePhoto={this.props.updatePhoto}\r\n                             isOwner={!this.props.match.params.userId}\r\n                />\r\n                <MyPosts posts={this.props.posts} addPost={this.props.addPost} deletePost={this.props.deletePost} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    posts: selectPosts(state), //MyPosts\r\n    profile: selectProfile(state), //ProfileInfo\r\n    status: selectStatus(state), //ProfileInfo\r\n    authorizedUserId: selectUserId(state) //Profile\r\n})\r\n\r\ntype StatePropsType = ReturnType<typeof mapStateToProps>;\r\n\r\ntype DispatchPropsType = {\r\n    getStatus: (userId: number) => void, //Profile\r\n    updateStatus: (status: string) => void, //ProfileInfo\r\n    getProfile: (userId: number) => void, //Profile\r\n    updateProfile: (profile: ProfileType) => void, //ProfileInfo\r\n    updatePhoto: (file: File) => void, //ProfileInfo\r\n    addPost: (newPostText: string) => void, //MyPosts\r\n    deletePost: (postId: number) => void //MyPosts\r\n}\r\n\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = StatePropsType & DispatchPropsType & RouteComponentProps<ParamsType>;\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<StatePropsType, DispatchPropsType, RouteComponentProps<ParamsType>, AppStateType>(mapStateToProps,\r\n        {getStatus, updateStatus, getProfile, updateProfile, updatePhoto, addPost: actions.addPost, deletePost: actions.deletePost}),\r\n    withRouter\r\n)(Profile);\r\n","export default __webpack_public_path__ + \"static/media/logo.858aa3fb.png\";","import React from \"react\";\r\nimport style from './Header.module.css';\r\nimport logo from '../../assets/logo.png';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {selectIsAuth, selectLogin} from \"../../redux/auth-selectors\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {NavLink, useHistory, useLocation} from \"react-router-dom\";\r\n\r\n\r\nconst Header: React.FC = () => {\r\n\r\n    const isAuth = useSelector(selectIsAuth);\r\n\r\n    const login = useSelector(selectLogin);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const location = useLocation();\r\n\r\n    const history = useHistory();\r\n\r\n    const onLogout = async () => {\r\n        const promise = await dispatch(logout());\r\n        Promise.all([promise]).then(() => {history.push('/login')});\r\n    };\r\n\r\n    const onLogin = () => {\r\n        history.push('login');\r\n    };\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.logo}>\r\n                <NavLink to={'/profile'}><img src={logo} alt=\"\"/></NavLink>\r\n            </div>\r\n            <div className={style.loginInfo}>\r\n                {isAuth\r\n                    ? <div className={style.logout}><span>{login}</span><button onClick={onLogout} >Logout</button></div>\r\n                    : location.pathname !== '/login' && <div className={style.login}><button onClick={onLogin} >Login</button></div>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React, { Suspense } from \"react\";\r\nimport style from './withSuspense.module.css';\r\n\r\n\r\nexport function withSuspense<WCP> (WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <Suspense fallback={<div className={style.wrapper}>...Loading</div>}>\r\n            <WrappedComponent {...props} />\r\n        </Suspense>\r\n    };\r\n}","import React from 'react';\nimport style from './App.module.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport ERROR404 from \"./components/Main/ERROR404/ERROR404\";\nimport {connect, Provider} from \"react-redux\";\nimport store, {AppStateType} from \"./redux/redux-store\";\nimport Login from \"./components/Main/Login/Login\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {selectInitialized} from \"./redux/app-selectors\";\nimport AppPreloader from \"./common/App-Preloader/App-Preloader\";\nimport Profile from './components/Main/Profile/Profile';\nimport Header from \"./components/Header/Header\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\nconst LazyDialogs = React.lazy(() => import('./components/Main/Dialogs/Dialogs'));\nconst LazyUsers = React.lazy(() => import('./components/Main/Users/Users'));\nconst LazyChat = React.lazy(() => import('./components/Main/Chat/Chat'));\n\nconst SuspendedLazyDialogs = withSuspense(LazyDialogs);\nconst SuspendedLazyUsers = withSuspense(LazyUsers);\nconst SuspendedLazyChat = withSuspense(LazyChat);\n\nclass App extends React.Component<PropsType> {\n\n    catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n        alert('Some error occurred')\n    }\n\n    componentDidMount() {\n        window.addEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n        this.props.initializeApp();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('unhandledrejection', this.catchAllUnhandledErrors);\n    }\n\n\n    render () {\n        if(!this.props.initialized) return (\n                            <AppPreloader />\n        )\n        return (\n            <div className={style.App}>\n                <header className={style.header}><Header /></header>\n                <nav className={style.nav}><Navbar /></nav>\n                <main className={style.main}>\n                    <div className={style.wrapper}>\n                        <Switch>\n                            <Redirect exact from='/' to='/profile' />\n                            <Route path={'/profile/:userId?'} render={() => <Profile />} />\n                            <Route path={'/dialogs'} render={() => <SuspendedLazyDialogs />} />\n                            <Route path={'/users'} render={() => <SuspendedLazyUsers />} />\n                            <Route path={'/chat'} render={() => <SuspendedLazyChat />}/>\n                            <Route path={'/login'} render={() => <Login />}/>\n                            <Route path={'*'} render={() => <ERROR404 />}/>\n                        </Switch>\n                    </div>\n                </main>\n\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: selectInitialized(state)\n})\n\nconst AppContainer = connect<StatePropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {initializeApp})(App)\n\ntype StatePropsType = ReturnType<typeof mapStateToProps>\n\ntype DispatchPropsType = {\n    initializeApp: () => void\n};\n\ntype PropsType = StatePropsType & DispatchPropsType;\n\nconst AppContainer2: React.FC = () => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer />\n            </Provider>\n        </HashRouter>\n    )\n}\n\nexport default AppContainer2;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer2 from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<AppContainer2 />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Navbar_wrapper__cwKln\",\"item\":\"Navbar_item__2UVJ0\",\"active\":\"Navbar_active__25Co8\"};","import axios from 'axios';\r\nimport {UserType} from \"../types/types\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'ec2e9a15-4537-4157-b59b-05bf7fc797c2'\r\n    },\r\n    withCredentials: true\r\n});\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodeEnum> = {\r\n    resultCode: RC\r\n    messages: Array<string>,\r\n    data: D\r\n}\r\n\r\nexport type GetUsersResponseType = {\r\n    items: UserType[],\r\n    totalCount: number,\r\n    error: string | null\r\n}\r\n\r\nexport enum ResultCodeEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1NWZs\",\"header\":\"App_header__2Y_Nq\",\"main\":\"App_main__Ocskk\",\"nav\":\"App_nav__e0NlX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Post_wrapper__6Av67\",\"body\":\"Post_body__1h_j_\",\"text\":\"Post_text__3GOQO\",\"img\":\"Post_img__UnAW9\",\"likes\":\"Post_likes__2Ebex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3m8F2\",\"logo\":\"Header_logo__3Jk_B\",\"loginInfo\":\"Header_loginInfo__1gYDI\",\"login\":\"Header_login__3f_cm\",\"logout\":\"Header_logout__1ioaO\"};","export default __webpack_public_path__ + \"static/media/userPhoto.157f088b.png\";","export default __webpack_public_path__ + \"static/media/preloader.abd00aa6.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileStatus_wrapper__3-8Cw\",\"input\":\"ProfileStatus_input__2RwnY\",\"span\":\"ProfileStatus_span__1mXbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"h3\":\"MyPosts_h3__1FwJr\",\"posts\":\"MyPosts_posts__1bcV_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"MyPostsForm_textarea__WJcuK\",\"button\":\"MyPostsForm_button__36GbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfileInfo_wrapper__TwT7F\",\"img\":\"ProfileInfo_img__1TnrV\",\"fileInput\":\"ProfileInfo_fileInput__2FINh\",\"file\":\"ProfileInfo_file__1l3eZ\",\"span\":\"ProfileInfo_span__1-FGf\",\"info\":\"ProfileInfo_info__3VLr5\",\"fullName\":\"ProfileInfo_fullName__1rPyw\",\"item\":\"ProfileInfo_item__3pnoH\",\"title\":\"ProfileInfo_title__215G8\",\"content\":\"ProfileInfo_content__3Pvsr\",\"button\":\"ProfileInfo_button__3Mroa\",\"lineContainer\":\"ProfileInfo_lineContainer__3Gljm\",\"lineContainer2\":\"ProfileInfo_lineContainer2__zDOZU\",\"line\":\"ProfileInfo_line__2eOPH\",\"line2\":\"ProfileInfo_line2__1NRCA\",\"contact\":\"ProfileInfo_contact__Ci8Re\",\"titleSpan\":\"ProfileInfo_titleSpan__36OBT\",\"valueSpan\":\"ProfileInfo_valueSpan__1bLWY\"};","import React from \"react\";\r\nimport style from './Preloader.module.css';\r\nimport preloader from '../../assets/preloader.svg';\r\n\r\nconst Preloader: React.FC = () => {\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <img src={preloader} alt=\"\"/>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default Preloader;","import {DialogType, MessageType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, userName: 'User_1', img: null},\r\n        {id: 2, userName: 'User_2', img: null},\r\n        {id: 3, userName: 'User_3', img: null}\r\n    ] as DialogType[],\r\n    messages: [\r\n        {id: 1, message: 'Are you going to the party tonight?', dir: 'in'},\r\n        {id: 2, message: 'The party is gonna be really cool!', dir: 'in'},\r\n        {id: 3, message: 'I am thinking whether to go or not', dir: 'out'}\r\n    ] as MessageType[],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action: ActionsTypes) => {\r\n    switch(action.type) {\r\n        case 'SN/DIALOGS/ADD_MESSAGE':\r\n            const newMessage: MessageType = {id: state.messages.length + 1, message: action.newMessageBody, dir: 'out'};\r\n            return {...state, messages: [...state.messages, newMessage]};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    addMessage: (newMessageBody: string) => ({type: 'SN/DIALOGS/ADD_MESSAGE', newMessageBody} as const)\r\n};\r\n\r\nexport default dialogsReducer;\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>;\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>;"],"sourceRoot":""}